public List<YourOutputModel> GetAllOutputModels()
    {
        var results = (from at in _context.LoanNoticeActivityTypes
                       join lt in _context.LoanNoticeActivityTags on at.ActivityTypeId equals lt.ActivityTypeId
                       join tag in _context.LoanNoticeTags on lt.TagId equals tag.TagId
                       select new YourOutputModel
                       {
                           ActivityTypeId = at.ActivityTypeId,
                           ActivityTypeName = at.ActivityTypeName,
                           Tags = new List<TagModel>
                           {
                               new TagModel
                               {
                                   TagId = tag.TagId,
                                   TagName = tag.TagName,
                                   IsActive = lt.IsActive,
                                   IsRequired = lt.IsRequired
                               }
                           }
                       })
                      .GroupBy(x => new { x.ActivityTypeId, x.ActivityTypeName })
                      .Select(g => new YourOutputModel
                      {
                          ActivityTypeId = g.Key.ActivityTypeId,
                          ActivityTypeName = g.Key.ActivityTypeName,
                          Tags = g.SelectMany(x => x.Tags).ToList()
                      })
                      .ToList();

        return results;
    }



----------------------------------------------------

using System.Linq;
using Microsoft.EntityFrameworkCore;

public class YourRepository
{
    private readonly YourDbContext _context;

    public YourRepository(YourDbContext context)
    {
        _context = context;
    }

    public YourOutputModel GetOutputModel(int activityTypeId)
    {
        var result = _context.LoanNoticeActivityTypes
            .Where(l => l.ActivityTypeId == activityTypeId)
            .Include(l => l.LoanNoticeActivityTags)
                .ThenInclude(lt => lt.Tag)
            .Select(l => new YourOutputModel
            {
                ActivityTypeId = l.ActivityTypeId,
                ActivityTypeName = l.ActivityTypeName,
                Tags = l.LoanNoticeActivityTags.Select(lt => new TagModel
                {
                    TagId = lt.Tag.TagId,
                    TagName = lt.Tag.TagName,
                    IsActive = lt.IsActive,
                    IsRequired = lt.IsRequired
                }).ToList()
            })
            .FirstOrDefault();

        return result;
    }
}
