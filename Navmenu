<!-- MenuComponent.razor -->
<div class="menu-item">
    <div @onmouseover="ShowSubmenu" @onmouseout="HideSubmenu">
        Menu Item
    </div>

    @if (showSubmenu)
    {
        <SubMenuComponent @onSubmenuClicked="HideSubmenu" />
    }
</div>

@code {
    private bool showSubmenu = false;

    private void ShowSubmenu()
    {
        showSubmenu = true;
    }

    private void HideSubmenu()
    {
        showSubmenu = false;
    }
}


<!-- SubMenuComponent.razor -->
<div class="submenu" @onmouseover="KeepSubmenu" @onmouseout="HideSubmenu">
    <!-- Submenu items -->
    <div @onclick="OnSubmenuItemClicked">Submenu Item 1</div>
    <div @onclick="OnSubmenuItemClicked">Submenu Item 2</div>
    <div @onclick="OnSubmenuItemClicked">Submenu Item 3</div>
</div>

@code {
    [Parameter]
    public EventCallback onSubmenuClicked { get; set; }

    private bool keepSubmenu = false;

    private void KeepSubmenu()
    {
        keepSubmenu = true;
    }

    private void HideSubmenu()
    {
        if (!keepSubmenu)
        {
            onSubmenuClicked.InvokeAsync();
        }
    }

    private void OnSubmenuItemClicked()
    {
        keepSubmenu = false;
    }
}


/* styles.css */
.menu-item {
    position: relative;
}

.submenu {
    position: absolute;
    top: 0;
    left: 100%;
    background-color: #f1f1f1;
    padding: 5px;
    display: none;
}

.menu-item:hover .submenu,
.submenu:hover {
    display: block;
}



-------------------------





<!-- MenuComponent.razor -->
<div class="menu-item" @onmouseover="ShowSubmenu" @onmouseout="HideSubmenu">
    Menu Item

    @if (showSubmenu)
    {
        <div class="submenu" @onmouseover="KeepSubmenu" @onmouseout="HideSubmenu">
            <!-- Submenu items -->
            <div>Submenu Item 1</div>
            <div>Submenu Item 2</div>
            <div>Submenu Item 3</div>
        </div>
    }
</div>

@code {
    private bool showSubmenu = false;
    private bool keepSubmenu = false;

    private void ShowSubmenu()
    {
        showSubmenu = true;
    }

    private void HideSubmenu()
    {
        if (!keepSubmenu)
        {
            showSubmenu = false;
        }
    }

    private void KeepSubmenu()
    {
        keepSubmenu = true;
    }
}

/* styles.css */
.menu-item {
    position: relative;
}

.submenu {
    position: absolute;
    top: 100%;
    left: 0;
    background-color: #f1f1f1;
    padding: 5px;
    display: none;
    z-index: 1; /* Add a higher z-index to keep the submenu above other elements */
}

.menu-item:hover .submenu,
.submenu:hover {
    display: block;
}







@inherits LayoutComponentBase

<div class="container">
    <div class="content">
        <div class="main">
            <div class="sidebar">
                <!-- Sidebar content here -->
            </div>
            <div class="body">
                @Body
            </div>
        </div>
    </div>
    <footer class="footer">
        <div class="container">
            <p>&copy; 2023 Your Company. All rights reserved.</p>
        </div>
    </footer>
</div>



<style>
    .navbar {
        position: relative;
    }

    .submenu {
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        background-color: #fff;
        padding: 0;
        list-style: none;
    }

    .navbar-item:hover .submenu {
        display: block;
    }

    .submenu-item {
        padding: 8px;
    }
</style>

<nav class="navbar">
    <div class="navbar-menu">
        <ul class="navbar-items">
            <li class="navbar-item">
                <a href="#">Entity Manager</a>
                <ul class="submenu">
                    <li class="submenu-item">
                        <a href="#">Priority</a>
                    </li>
                    <li class="submenu-item">
                        <a href="#">Disabled Entity</a>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</nav>
