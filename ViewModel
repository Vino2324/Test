public class Employee
{
    public int EmployeeId { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public DateTime DateOfBirth { get; set; }
}


public class EmployeeViewModel
{
    public int EmployeeId { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string DateOfBirth { get; set; }
}

------------------------------------
// Mapping the Employee model class to the EmployeeViewModel view model class
var config = new MapperConfiguration(cfg =>
{
    cfg.CreateMap<Employee, EmployeeViewModel>();
});

IMapper mapper = config.CreateMapper();

// Map an Employee object to EmployeeViewModel
var employee = new Employee
{
    EmployeeId = 1,
    FirstName = "John",
    LastName = "Doe",
    DateOfBirth = new DateTime(1990, 1, 1)
};

var employeeViewModel = mapper.Map<EmployeeViewModel>(employee);



---------------


[ApiController]
[Route("api/employees")]
public class EmployeeController : ControllerBase
{
    private readonly IEmployeeService _employeeService;

    public EmployeeController(IEmployeeService employeeService)
    {
        _employeeService = employeeService;
    }

    [HttpGet]
    public IActionResult GetAllEmployees()
    {
        var employees = _employeeService.GetAllEmployees();
        var employeeViewModels = mapper.Map<List<EmployeeViewModel>>(employees);
        return Ok(employeeViewModels);
    }

    // Other CRUD operations for managing employees
}



-----------------------

public interface IEmployeeService
{
    List<Employee> GetAllEmployees();
    Employee GetEmployeeById(int id);
    void AddEmployee(Employee employee);
    void UpdateEmployee(Employee employee);
    void DeleteEmployee(int id);
}


-----------


public class EmployeeService : IEmployeeService
{
    private readonly IEmployeeData _employeeData;

    public EmployeeService(IEmployeeData employeeData)
    {
        _employeeData = employeeData;
    }

    public List<Employee> GetAllEmployees()
    {
        return _employeeData.GetAllEmployees();
    }

    public Employee GetEmployeeById(int id)
    {
        return _employeeData.GetEmployeeById(id);
    }

    public void AddEmployee(Employee employee)
    {
        _employeeData.AddEmployee(employee);
    }

    public void UpdateEmployee(Employee employee)
    {
        _employeeData.UpdateEmployee(employee);
    }

    public void DeleteEmployee(int id)
    {
        _employeeData.DeleteEmployee(id);
    }
}


------------

public interface IEmployeeData
{
    List<Employee> GetAllEmployees();
    Employee GetEmployeeById(int id);
    void AddEmployee(Employee employee);
    void UpdateEmployee(Employee employee);
    void DeleteEmployee(int id);
}


---------


public class EmployeeData : IEmployeeData
{
    private List<Employee> _employees;

    public EmployeeData()
    {
        _employees = new List<Employee>();
    }

    public List<Employee> GetAllEmployees()
    {
        return _employees;
    }

    public Employee GetEmployeeById(int id)
    {
        return _employees.FirstOrDefault(e => e.EmployeeId == id);
    }

    public void AddEmployee(Employee employee)
    {
        _employees.Add(employee);
    }

    public void UpdateEmployee(Employee employee)
    {
        var existingEmployee = _employees.FirstOrDefault(e => e.EmployeeId == employee.EmployeeId);
        if (existingEmployee != null)
        {
            existingEmployee.FirstName = employee.FirstName;
            existingEmployee.LastName = employee.LastName;
            existingEmployee.DateOfBirth = employee.DateOfBirth;
        }
   



----------------------------

